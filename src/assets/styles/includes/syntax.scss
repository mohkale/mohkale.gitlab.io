@mixin syntax-color($class, $fg, $highlight-fg: null, $highlight-bg: null) {
    .#{$class} {
        color: $fg;

        @if $highlight-fg {
            &::selection {
                color:            $highlight-fg;
                background-color: $highlight-bg or $fg;
            }
        }

        @content; // allow extra styles from include :)
    }
}

/*
 * Make all elements with class {@code $children} inherit styles from *
 * {@code $parent}.
 */
@mixin syntax-extend($parent, $children...) {
    @each $child in $children {
        .#{$child} {
            @extend .#{$parent};
            @content;
        }
    }
}

pre.chroma {
    margin-top: 0px;
    margin-bottom: 0px;
}

/** Syntax Highlighting Rules. See [[https://gohugo.io/content-management/syntax-highlighting/][here]]. */
.highlight {
    color: $aoh-very-light-grey;

    /* Keyword       */ @include syntax-color(k, $aoh-green);
    /* LiteralString */ @include syntax-color(s, $aoh-blue);
    /* LiteralNumber */ @include syntax-color(m, $aoh-very-light-grey);
    /* Comment       */ @include syntax-color(c, $aoh-grey);
    /* Operator      */ @include syntax-color(o, $aoh-very-light-grey);

    // non-existant parent syntax classes
    /* Generic       */ @include syntax-color(g, $aoh-very-light-grey);
    /* Name          */ @include syntax-color(n, $aoh-very-light-grey);

    /*
     * == Unassigned Syntax Classes ==
     * | .lntd    | LineTableTD      |
     * | .lnt     | LineNumbersTable |
     * | .ln      | LineNumbers      |
     * | .w       | TextWhitespace   |
    */

    .err { // Error
        background: $aoh-red;
        color: $aoh-very-dark-grey;
    }

    .hl { // LineHighlight
        background-color: $aoh-dark-grey;

        .lnt {
            color: $aoh-very-light-grey;
        }

        color: $aoh-very-dark-grey;
    }

    // make highlighted lines span the full width
    // of the containing highlight div.
    .lntd:last-child { // LineTable
        width: 100%; }
    .hl { // HighlightedLine
        width: 100%;
        display: block; }

    // add some sanitizing padding around the non
    // tabular code blocks.
    & > pre.chroma {
        padding: 3px;
    }

    @include syntax-extend(
        k,  // Keyword
        kc, // KeywordConstant
        kd, // KeywordDeclaration
        kn, // KeywordNamespace
        kp, // KeywordPseudo
        kr, // KeywordReserved
        kt, // KeywordType
    );

    @include syntax-extend(
        s,  // LiteralString
        sa, // LiteralStringAffix
        sb, // LiteralStringBacktick
        sc, // LiteralStringChar
        dl, // LiteralStringDelimiter
        sd, // LiteralStringDoc
        s2, // LiteralStringDouble
        se, // LiteralStringEscape
        sh, // LiteralStringHeredoc
        si, // LiteralStringInterpol
        sx, // LiteralStringOther
        sr, // LiteralStringRegex
        s1, // LiteralStringSingle
        ss, // LiteralStringSymbol
    );

    @include syntax-extend(
        m,  // LiteralNumber
        mb, // LiteralNumberBin
        mf, // LiteralNumberFloat
        mh, // LiteralNumberHex
        mi, // LiteralNumberInteger
        il, // LiteralNumberIntegerLong
        mo, // LiteralNumberOct
    );

    @include syntax-extend(
        c,   // Comment
        ch,  // CommentHashbang
        cm,  // CommentMultiline
        c1,  // CommentSingle
        cs,  // CommentSpecial
        cp,  // CommentPreproc
        cpf, // CommentPreprocFile
    );

    @include syntax-extend(
        o,  // Operator
        p,  // Punctuation
        ow, // OperatorWord
    );

    @include syntax-extend(
        g,  // Generic
        gd, // GenericDeleted
        ge, // GenericEmph
        gr, // GenericError
        gh, // GenericHeading
        gi, // GenericInserted
        go, // GenericOutput
        gp, // GenericPrompt
        gs, // GenericStrong
        gu, // GenericSubheading
        gt, // GenericTraceback
        gl, // GenericUnderline
    );

    @include syntax-extend(
        n,  // Name
        ni, // NameEntity
        ne, // NameException
        nl, // NameLabel
        nn, // NameNamespace
        nt, // NameTag
        nv, // NameVariable
        nx, // NameOther
    );

    /* NameDecorator */ @include syntax-color(nd, $aoh-blue);
    /* NameBuiltin   */ @include syntax-color(nb, $aoh-blue);
    /* NameClass     */ @include syntax-color(nc, $aoh-red);
    /* NameFunction  */ @include syntax-color(nf, $aoh-yellow);
    /* NameConstant  */ @include syntax-color(no, $aoh-red);
    /* NameAttribute */ @include syntax-color(na, $aoh-yellow);

    // for diffs, TODO prettify
    .gi, .gd {
        display: block;
        width: 100%;
    }

    .gi {
        color: black;
        background-color: darken(desaturate($aoh-green, 15%), 15%);
    }

    .gd {
        color: black;
        background-color: darken(desaturate($aoh-purple, 5%), 5%);
    }

    // language specific variants
    .language-java {
        // .n {
        //     color: $aoh-red;
        // }
    }
}
